
function curl($url, $post = 0, $httpheader = 0, $proxy = 0) { 
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30);
    curl_setopt($ch, CURLOPT_TIMEOUT, 60);
    curl_setopt($ch, CURLOPT_COOKIE, TRUE);

    if ($post) {
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
    }
    if ($httpheader) {
        curl_setopt($ch, CURLOPT_HTTPHEADER, $httpheader);
    }
    if ($proxy) {
        curl_setopt($ch, CURLOPT_HTTPPROXYTUNNEL, true);
        curl_setopt($ch, CURLOPT_PROXY, $proxy);
    }
    curl_setopt($ch, CURLOPT_HEADER, true);
    $response = curl_exec($ch);
    $httpcode = curl_getinfo($ch);
    if (!$httpcode) return "Curl Error : " . curl_error($ch); else {
        $header = substr($response, 0, curl_getinfo($ch, CURLINFO_HEADER_SIZE));
        $body = substr($response, curl_getinfo($ch, CURLINFO_HEADER_SIZE));
        curl_close($ch);
        return array($header, $body);
    }
}

# Hàm để tạo HTTP header mặc định
function head() {
    return [
        "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    ];
}

# Hàm GET
function get($url) {
    return curl($url, '', head())[1];
}

# Hàm POST
function post($url, $data) {
    return curl($url, $data, head())[1];
}

# Hàm lưu dữ liệu vào file JSON
function save($data, $data_post) {
    if (!file_get_contents($data)) {
        file_put_contents($data, "[]");
    }
    $json = json_decode(file_get_contents($data), true);
    $arr = array_merge($json, $data_post);
    file_put_contents($data, json_encode($arr, JSON_PRETTY_PRINT));
}




function POST($host,$tsma,$data){
  $mr = curl_init();
  curl_setopt_array($mr, array(
  CURLOPT_HEADER => true,
  CURLOPT_PORT => "443",
  CURLOPT_URL => "$host",
  CURLOPT_RETURNTRANSFER => true,
  CURLOPT_SSL_VERIFYPEER => false,
  CURLOPT_CUSTOMREQUEST => "POST",
  CURLOPT_POSTFIELDS => $data,
  CURLOPT_HTTPHEADER => $tsma,
  CURLOPT_ENCODING => "gzip"));
  $mr2 = curl_exec($mr); curl_close($mr);
  return $mr2;}  
function GET($host,$tsm){
  $mr = curl_init();
  curl_setopt_array($mr, array(
  CURLOPT_HEADER => true,
  CURLOPT_PORT => "443",
  CURLOPT_URL => "$host",
  CURLOPT_RETURNTRANSFER => true,
  CURLOPT_SSL_VERIFYPEER => false,
  CURLOPT_CUSTOMREQUEST => "GET",
  CURLOPT_HTTPHEADER => $tsm,
  CURLOPT_ENCODING => "gzip"));
  $mr2 = curl_exec($mr); curl_close($mr);
  return $mr2;}

function tren($so){
date_default_timezone_set("Asia/Ho_Chi_Minh");
$date = date("d/m/Y");
echo "\033[1;32m=========>>>>>>>>>>>\033[0;37m$date\033[1;32m<<<<<<<<<<<=========\n";}

// Xóa hoặc bỏ comment hàm duoi() nếu bạn cần nó.
// function duoi($so){
// date_default_timezone_set("Asia/Ho_Chi_Minh");
// $gio = date("H:i:s");      
// echo "\033[1;32m=========>>>>>>>>>>>>\033[0;37m$gio\033[1;32m<<<<<<<<<<<==========\n\n";}
